package frc.robot;

import frc.robot.commands.*;
import frc.robot.subsystems.*;
import edu.wpi.first.wpilibj.smartdashboard.SendableChooser;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;
import edu.wpi.first.wpilibj2.command.Command;
import edu.wpi.first.wpilibj.GenericHID;
import edu.wpi.first.wpilibj.XboxController;
import edu.wpi.first.wpilibj2.command.button.JoystickButton;
import edu.wpi.first.wpilibj2.command.button.Trigger;


public class RobotContainer {

  private static RobotContainer m_robotContainer = new RobotContainer();

    public final ArmSubsystem m_armSubsystem = new ArmSubsystem();
    public final BeamBreak m_beamBreak = new BeamBreak();
    public final ShooterSubsystem m_shooterSubsystem=new ShooterSubsystem();
    //public final LEDsSubsystem m_leds = new LEDsSubsystem();
    public static ArmSubsystem getArmSubsystem() {
     return getArmSubsystem();
    }

// Joysticks
private final XboxController m_controller = new XboxController(0);

  
  // A chooser for autonomous commands
  SendableChooser<Command> m_chooser = new SendableChooser<>();

  /**
  * The container for the robot.  Contains subsystems, OI devices, and commands.
  */
  private RobotContainer() {
    // Configure the button bindings
    configureButtonBindings();

    // Configure default commands

    // Configure autonomous sendable chooser

    m_chooser.setDefaultOption("Autonomous Command", new AutonomousCommand());
    SmartDashboard.putData("Auto Mode", m_chooser);

    

  }

  public static RobotContainer getInstance() {
    return m_robotContainer;
  }

  /**
   * Use this method to define your button->command mappings.  Buttons can be created by
   * instantiating a {@link GenericHID} or one of its subclasses ({@link
   * edu.wpi.first.wpilibj.Joystick} or {@link XboxController}), and then passing it to a
   * {@link edu.wpi.first.wpilibj2.command.button.JoystickButton}.
   */
  private void configureButtonBindings() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=BUTTONS
// Create some buttons
Trigger xboxButton1 = new JoystickButton(m_controller, XboxController.Button.kA.value);    
xboxButton1.whileTrue(new propellor( m_armSubsystem, 0.5 ));

Trigger xboxButton2 = new JoystickButton(m_controller, XboxController.Button.kB.value);    
xboxButton2.whileTrue(new propellor( m_armSubsystem, -0.5 ));

Trigger xboxButton3 = new JoystickButton(m_controller, XboxController.Button.kX.value);    
xboxButton3.whileTrue(new shooter( m_shooterSubsystem, -1 ));

  }

public XboxController getm_controller() {
      return m_controller;
    }
  /**
   * Use this to pass the autonomous command to the main {@link Robot} class.
   *
   * @return the command to run in autonomous
  */
  public Command getAutonomousCommand() {
    // The selected command will be run in autonomous
    return m_chooser.getSelected();
  }
  

}

